#include "MCAL/MRCC/MRCC_interface.h"
#include "MCAL/MGPIO/MGPIO_interface.h"
#include "HAL/HLED/HLED_interface.h"
#include "HAL/HSWITCH/HSWITCH_interface.h"
#include "MCAL/MSYSTICK/MSYSTICK_interface.h"
#include "SERVICES/SCHED/SCHED_interface.h"
#include "HAL/HLCD/HLCD_interface.h"
#include "MCAL/MUSART/MUSART_interface.h"
#include "MCAL/MNVIC/MNVIC_interface.h"


void transmissionCompleteCallback(void) 
    {
       HLED_vSetLedStatus(Led_Switch, LED_STATUS_ON);
    }
int main(void)
{ 
  MRCC_EnablePeripheral(MRCC_GPIOA);
  MRCC_EnablePeripheral(MRCC_GPIOB);
  MRCC_EnablePeripheral(MRCC_GPIOC);
  MRCC_EnablePeripheral(MRCC_USART1);

  MGPIO_PIN_config_t USART_Tx_Pin_Config = {
    .GPIOPort = GPIO_PORTB,                        // Assuming USART Tx pin is connected to GPIO Port A
    .GPIOPin = GPIO_PIN6,                          // Assuming USART Tx pin is connected to pin 9
    .GPIOMode = GPIO_AF,                           // Alternative function mode
    .GPIO_OUTPUTTYPE = GPIO_PUSHPULL,              // Push-pull output type
    .GPIO_INPUTTYPE = GPIO_NO_PULLUPPULLDOWN,      // No pull-up/pull-down
    .GPIOSpeed = GPIO_HIGH_SPEED,                  // High speed
    .GPIOAlternative = GPIO_AF_USART_1_2           // USART alternative function
};

MGPIO_PIN_config_t USART_Rx_Pin_Config = {
    .GPIOPort = GPIO_PORTB,             // Assuming USART Rx pin is connected to GPIO Port A
    .GPIOPin = GPIO_PIN7,              // Assuming USART Rx pin is connected to pin 10
    .GPIOMode = GPIO_AF,                // Alternative function mode
    .GPIO_OUTPUTTYPE = GPIO_PUSHPULL,   // Push-pull output type
    .GPIO_INPUTTYPE = GPIO_NO_PULLUPPULLDOWN,  // No pull-up/pull-down
    .GPIOSpeed = GPIO_HIGH_SPEED,       // High speed
    .GPIOAlternative = GPIO_AF_USART_1_2  // USART alternative function
};
MGPIO_enuSetPinConfig(&USART_Tx_Pin_Config);
MGPIO_enuSetPinConfig(&USART_Rx_Pin_Config);


   HLED_vLedInit();
   //HLCD_vidPinInit();
   //HLCD_voidLCDInitASYNCH();
   //HSWITCH_vSwitchInit();
   //SCHED_INIT();
   //SCHED_START();
    
     MUSART_enuInit();
     MNVIC_VoidEnablePeripheralInterrupt(USART1_IRQ);

    u8 data[] = "Hello, Mina" ;

    u16 length = sizeof(data) - 1 ;  // Exclude the null terminator

    MUSART_enuErrorStatus status = MUSART_enuSendBufferAsync(USART_1, data, length,transmissionCompleteCallback);
    
      
      if (status!= MUSART_enuOK) {
         HLED_vSetLedStatus(Led_Switch, LED_STATUS_OFF);
        // Handle the error appropriately
    }
    
   // MUSART_enuSendByteSync(USART_1,'M');
   

  while (1)
    { 
     
  
    }
    return 0 ;
}

